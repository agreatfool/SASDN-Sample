/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
var userPb_user_pb = require('../userPb/user_pb.js');
goog.exportSymbol('proto.bookPb.Book', null, global);
goog.exportSymbol('proto.bookPb.BookCategory', null, global);
goog.exportSymbol('proto.bookPb.BookMap', null, global);
goog.exportSymbol('proto.bookPb.GetBookRequest', null, global);
goog.exportSymbol('proto.bookPb.GetBookViaAuthorRequest', null, global);
goog.exportSymbol('proto.bookPb.UpdateBookRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.Book = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookPb.Book.repeatedFields_, null);
};
goog.inherits(proto.bookPb.Book, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.Book.displayName = 'proto.bookPb.Book';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookPb.Book.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.Book.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.Book.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.Book} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.Book.toObject = function(includeInstance, msg) {
  var f, obj = {
    isbn: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    author: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maincategory: (f = msg.getMaincategory()) && proto.bookPb.BookCategory.toObject(includeInstance, f),
    categorylistList: jspb.Message.toObjectList(msg.getCategorylistList(),
    proto.bookPb.BookCategory.toObject, includeInstance),
    tagsList: jspb.Message.getField(msg, 6),
    mapbookMap: (f = msg.getMapbookMap()) ? f.toObject(includeInstance, proto.bookPb.BookCategory.toObject) : [],
    mapnameMap: (f = msg.getMapnameMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.Book}
 */
proto.bookPb.Book.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.Book;
  return proto.bookPb.Book.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.Book} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.Book}
 */
proto.bookPb.Book.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsbn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 4:
      var value = new proto.bookPb.BookCategory;
      reader.readMessage(value,proto.bookPb.BookCategory.deserializeBinaryFromReader);
      msg.setMaincategory(value);
      break;
    case 5:
      var value = new proto.bookPb.BookCategory;
      reader.readMessage(value,proto.bookPb.BookCategory.deserializeBinaryFromReader);
      msg.addCategorylist(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 7:
      var value = msg.getMapbookMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bookPb.BookCategory.deserializeBinaryFromReader);
         });
      break;
    case 8:
      var value = msg.getMapnameMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readString);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.Book.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.Book.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.Book} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.Book.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsbn();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaincategory();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bookPb.BookCategory.serializeBinaryToWriter
    );
  }
  f = message.getCategorylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.bookPb.BookCategory.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getMapbookMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bookPb.BookCategory.serializeBinaryToWriter);
  }
  f = message.getMapnameMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional int64 isbn = 1;
 * @return {number}
 */
proto.bookPb.Book.prototype.getIsbn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bookPb.Book.prototype.setIsbn = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.bookPb.Book.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.bookPb.Book.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string author = 3;
 * @return {string}
 */
proto.bookPb.Book.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.bookPb.Book.prototype.setAuthor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional BookCategory mainCategory = 4;
 * @return {?proto.bookPb.BookCategory}
 */
proto.bookPb.Book.prototype.getMaincategory = function() {
  return /** @type{?proto.bookPb.BookCategory} */ (
    jspb.Message.getWrapperField(this, proto.bookPb.BookCategory, 4));
};


/** @param {?proto.bookPb.BookCategory|undefined} value */
proto.bookPb.Book.prototype.setMaincategory = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.bookPb.Book.prototype.clearMaincategory = function() {
  this.setMaincategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bookPb.Book.prototype.hasMaincategory = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated BookCategory categoryList = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.bookPb.BookCategory>}
 */
proto.bookPb.Book.prototype.getCategorylistList = function() {
  return /** @type{!Array.<!proto.bookPb.BookCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bookPb.BookCategory, 5));
};


/** @param {!Array.<!proto.bookPb.BookCategory>} value */
proto.bookPb.Book.prototype.setCategorylistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bookPb.BookCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bookPb.BookCategory}
 */
proto.bookPb.Book.prototype.addCategorylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bookPb.BookCategory, opt_index);
};


proto.bookPb.Book.prototype.clearCategorylistList = function() {
  this.setCategorylistList([]);
};


/**
 * repeated string tags = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.bookPb.Book.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 6));
};


/** @param {!Array.<string>} value */
proto.bookPb.Book.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.bookPb.Book.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.bookPb.Book.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * map<string, BookCategory> mapBook = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bookPb.BookCategory>}
 */
proto.bookPb.Book.prototype.getMapbookMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bookPb.BookCategory>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.bookPb.BookCategory));
};


proto.bookPb.Book.prototype.clearMapbookMap = function() {
  this.getMapbookMap().clear();
};


/**
 * map<int64, string> mapName = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.bookPb.Book.prototype.getMapnameMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


proto.bookPb.Book.prototype.clearMapnameMap = function() {
  this.getMapnameMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.BookCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookPb.BookCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.BookCategory.displayName = 'proto.bookPb.BookCategory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.BookCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.BookCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.BookCategory} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.BookCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isparent: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.BookCategory}
 */
proto.bookPb.BookCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.BookCategory;
  return proto.bookPb.BookCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.BookCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.BookCategory}
 */
proto.bookPb.BookCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsparent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.BookCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.BookCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.BookCategory} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.BookCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsparent();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.bookPb.BookCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bookPb.BookCategory.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.bookPb.BookCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.bookPb.BookCategory.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool isParent = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.bookPb.BookCategory.prototype.getIsparent = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.bookPb.BookCategory.prototype.setIsparent = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.BookMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bookPb.BookMap.repeatedFields_, null);
};
goog.inherits(proto.bookPb.BookMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.BookMap.displayName = 'proto.bookPb.BookMap';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bookPb.BookMap.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.BookMap.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.BookMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.BookMap} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.BookMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bookList: jspb.Message.toObjectList(msg.getBookList(),
    proto.bookPb.Book.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.BookMap}
 */
proto.bookPb.BookMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.BookMap;
  return proto.bookPb.BookMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.BookMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.BookMap}
 */
proto.bookPb.BookMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = new proto.bookPb.Book;
      reader.readMessage(value,proto.bookPb.Book.deserializeBinaryFromReader);
      msg.addBook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.BookMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.BookMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.BookMap} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.BookMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBookList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bookPb.Book.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.bookPb.BookMap.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bookPb.BookMap.prototype.setCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated Book book = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.bookPb.Book>}
 */
proto.bookPb.BookMap.prototype.getBookList = function() {
  return /** @type{!Array.<!proto.bookPb.Book>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bookPb.Book, 2));
};


/** @param {!Array.<!proto.bookPb.Book>} value */
proto.bookPb.BookMap.prototype.setBookList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bookPb.Book=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bookPb.Book}
 */
proto.bookPb.BookMap.prototype.addBook = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bookPb.Book, opt_index);
};


proto.bookPb.BookMap.prototype.clearBookList = function() {
  this.setBookList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.GetBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookPb.GetBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.GetBookRequest.displayName = 'proto.bookPb.GetBookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.GetBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.GetBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.GetBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.GetBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isbn: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.GetBookRequest}
 */
proto.bookPb.GetBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.GetBookRequest;
  return proto.bookPb.GetBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.GetBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.GetBookRequest}
 */
proto.bookPb.GetBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsbn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.GetBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.GetBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.GetBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.GetBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsbn();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 isbn = 1;
 * @return {number}
 */
proto.bookPb.GetBookRequest.prototype.getIsbn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bookPb.GetBookRequest.prototype.setIsbn = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.GetBookViaAuthorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookPb.GetBookViaAuthorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.GetBookViaAuthorRequest.displayName = 'proto.bookPb.GetBookViaAuthorRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.GetBookViaAuthorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.GetBookViaAuthorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.GetBookViaAuthorRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.GetBookViaAuthorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    author: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.GetBookViaAuthorRequest}
 */
proto.bookPb.GetBookViaAuthorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.GetBookViaAuthorRequest;
  return proto.bookPb.GetBookViaAuthorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.GetBookViaAuthorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.GetBookViaAuthorRequest}
 */
proto.bookPb.GetBookViaAuthorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.GetBookViaAuthorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.GetBookViaAuthorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.GetBookViaAuthorRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.GetBookViaAuthorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string author = 1;
 * @return {string}
 */
proto.bookPb.GetBookViaAuthorRequest.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.bookPb.GetBookViaAuthorRequest.prototype.setAuthor = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bookPb.UpdateBookRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bookPb.UpdateBookRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.bookPb.UpdateBookRequest.displayName = 'proto.bookPb.UpdateBookRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bookPb.UpdateBookRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bookPb.UpdateBookRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bookPb.UpdateBookRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.bookPb.UpdateBookRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isbn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    book: (f = msg.getBook()) && proto.bookPb.Book.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bookPb.UpdateBookRequest}
 */
proto.bookPb.UpdateBookRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bookPb.UpdateBookRequest;
  return proto.bookPb.UpdateBookRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bookPb.UpdateBookRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bookPb.UpdateBookRequest}
 */
proto.bookPb.UpdateBookRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsbn(value);
      break;
    case 2:
      var value = new proto.bookPb.Book;
      reader.readMessage(value,proto.bookPb.Book.deserializeBinaryFromReader);
      msg.setBook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bookPb.UpdateBookRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bookPb.UpdateBookRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bookPb.UpdateBookRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.bookPb.UpdateBookRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsbn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBook();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.bookPb.Book.serializeBinaryToWriter
    );
  }
};


/**
 * optional string isbn = 1;
 * @return {string}
 */
proto.bookPb.UpdateBookRequest.prototype.getIsbn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.bookPb.UpdateBookRequest.prototype.setIsbn = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Book book = 2;
 * @return {?proto.bookPb.Book}
 */
proto.bookPb.UpdateBookRequest.prototype.getBook = function() {
  return /** @type{?proto.bookPb.Book} */ (
    jspb.Message.getWrapperField(this, proto.bookPb.Book, 2));
};


/** @param {?proto.bookPb.Book|undefined} value */
proto.bookPb.UpdateBookRequest.prototype.setBook = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.bookPb.UpdateBookRequest.prototype.clearBook = function() {
  this.setBook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.bookPb.UpdateBookRequest.prototype.hasBook = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.bookPb);
